{"version":3,"sources":["logo.svg","screen/HomeScreen.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["HomeScreen","style","fontFamily","NavBar","useState","tabs","active","href","disabled","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAAe,I,2BCGR,SAASA,IACZ,OACI,sBAAMC,MAAO,CAACC,WAAW,aAAzB,iE,oBCcC,SAASC,IAAS,IAAD,EACoBC,oBAAS,GAD7B,gCAEoBA,oBAAS,IAF7B,6BAGpB,OACE,eAAC,IAAD,CAAKC,MAAI,EAAT,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAASC,QAAM,EAACC,KAAK,IAArB,sBAIJ,cAAC,IAAD,UACI,cAAC,IAAD,CAASA,KAAK,IAAd,oBAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CAASA,KAAK,IAAd,4BAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CAASC,UAAQ,EAACD,KAAK,IAAvB,gCC/BhB,IA4BeE,EA5BH,kBACV,cAAC,IAAD,UACI,gCACE,cAACN,EAAD,IASA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAlB,SACE,cAACX,EAAD,MAEF,cAAC,IAAD,CAAOW,KAAK,WAEZ,cAAC,IAAD,CAAOA,KAAK,wBCXPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.047983fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\n\nexport function HomeScreen(){\n    return(\n        <text style={{fontFamily:\"linowrite\"}}> hihi, I am Wilson Lin, byebye happy, Call me maybe</text>\n    )        \n}","import React,{useState} from \"react\";\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Collapse\n  } from \"shards-react\";\n  \n  export function NavBar(){\n      const [collapseOpen, setCollapseOpen] = useState(false)\n      const [dropdownOpen, setDropDownOpen] = useState(false)\n      return(\n        <Nav tabs>\n            <NavItem>\n                <NavLink active href=\"#\">\n                Active\n                </NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink href=\"#\">Link</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink href=\"#\">Another Link</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink disabled href=\"#\">\n                Disabled Link\n                </NavLink>\n            </NavItem>\n        </Nav>\n      )\n  }","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from 'react-router-dom';\nimport {HomeScreen} from \"./screen/HomeScreen\"\nimport {NavBar} from \"./components/Navbar\"\nconst App = () => (\n  <Router>\n      <div>\n        <NavBar/>\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <HomeScreen/>\n          </Route>\n          <Route path=\"/about\">\n          </Route>\n          <Route path=\"/dashboard\">\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n)\n// Populate sample pages. \nconst Client= () => <h3>What is client side?<body><li>Browser</li><li>Runs on local machine</li><li>React renders user interface</li><li>React Router adds clickable links</li></body></h3>\nconst Server= () => <h3>What is server side?<li>node.js - JavaScript everywhere!</li></h3>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}